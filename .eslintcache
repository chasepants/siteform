[{"/home/chasepants/Desktop/siteform/src/index.js":"1","/home/chasepants/Desktop/siteform/src/reportWebVitals.js":"2","/home/chasepants/Desktop/siteform/src/App.js":"3","/home/chasepants/Desktop/siteform/src/components/common/NavigationBar.jsx":"4","/home/chasepants/Desktop/siteform/src/PageNotFound.js":"5","/home/chasepants/Desktop/siteform/src/redux/configureStore.js":"6","/home/chasepants/Desktop/siteform/src/redux/reducers/index.js":"7","/home/chasepants/Desktop/siteform/src/redux/reducers/bucket.js":"8","/home/chasepants/Desktop/siteform/src/components/domainSelection/DomainSelectorPage.jsx":"9","/home/chasepants/Desktop/siteform/src/components/siteForm/SiteFormPage.jsx":"10","/home/chasepants/Desktop/siteform/src/components/templateSelection/TemplateSelector.jsx":"11","/home/chasepants/Desktop/siteform/src/components/siteForm/RestaurantForm.jsx":"12","/home/chasepants/Desktop/siteform/src/components/siteForm/AboutMeForm.jsx":"13","/home/chasepants/Desktop/siteform/src/components/siteForm/restaurant-forms/AboutUsForm.jsx":"14","/home/chasepants/Desktop/siteform/src/components/siteForm/restaurant-forms/ContactPageForm.jsx":"15","/home/chasepants/Desktop/siteform/src/redux/reducers/template.js":"16","/home/chasepants/Desktop/siteform/src/redux/reducers/header.js":"17","/home/chasepants/Desktop/siteform/src/components/common/Header.jsx":"18","/home/chasepants/Desktop/siteform/src/redux/reducers/subHeader.js":"19","/home/chasepants/Desktop/siteform/src/components/common/SubHeader.jsx":"20","/home/chasepants/Desktop/siteform/src/components/domainSelection/DomainInput.jsx":"21","/home/chasepants/Desktop/siteform/src/services/api/domains.js":"22","/home/chasepants/Desktop/siteform/src/components/domainSelection/DomainToast.jsx":"23","/home/chasepants/Desktop/siteform/src/components/siteForm/restaurant-forms/GeneralInfoForm.jsx":"24"},{"size":698,"mtime":1620308712688,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1614470730717,"results":"27","hashOfConfig":"26"},{"size":959,"mtime":1616737950031,"results":"28","hashOfConfig":"26"},{"size":763,"mtime":1616725231760,"results":"29","hashOfConfig":"26"},{"size":115,"mtime":1616725231760,"results":"30","hashOfConfig":"26"},{"size":247,"mtime":1616725231768,"results":"31","hashOfConfig":"26"},{"size":343,"mtime":1616725231768,"results":"32","hashOfConfig":"26"},{"size":246,"mtime":1616725231768,"results":"33","hashOfConfig":"26"},{"size":2017,"mtime":1616725231764,"results":"34","hashOfConfig":"26"},{"size":1699,"mtime":1616725231764,"results":"35","hashOfConfig":"26"},{"size":2949,"mtime":1616725231764,"results":"36","hashOfConfig":"26"},{"size":5318,"mtime":1620396143594,"results":"37","hashOfConfig":"26"},{"size":2807,"mtime":1616725231764,"results":"38","hashOfConfig":"26"},{"size":1689,"mtime":1620395354942,"results":"39","hashOfConfig":"26"},{"size":1668,"mtime":1620394511229,"results":"40","hashOfConfig":"26"},{"size":254,"mtime":1616725231768,"results":"41","hashOfConfig":"26"},{"size":238,"mtime":1616725231768,"results":"42","hashOfConfig":"26"},{"size":441,"mtime":1616725231760,"results":"43","hashOfConfig":"26"},{"size":243,"mtime":1616725231768,"results":"44","hashOfConfig":"26"},{"size":459,"mtime":1616725231760,"results":"45","hashOfConfig":"26"},{"size":426,"mtime":1616725231764,"results":"46","hashOfConfig":"26"},{"size":541,"mtime":1616725231768,"results":"47","hashOfConfig":"26"},{"size":942,"mtime":1616725231764,"results":"48","hashOfConfig":"26"},{"size":2067,"mtime":1620395479906,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"170ejwe",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/chasepants/Desktop/siteform/src/index.js",[],"/home/chasepants/Desktop/siteform/src/reportWebVitals.js",[],["104","105"],"/home/chasepants/Desktop/siteform/src/App.js",["106"],"/home/chasepants/Desktop/siteform/src/components/common/NavigationBar.jsx",[],"/home/chasepants/Desktop/siteform/src/PageNotFound.js",[],"/home/chasepants/Desktop/siteform/src/redux/configureStore.js",["107"],"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport root from './reducers';\n\nexport default function configureStore() {\n    return createStore(root, composeWithDevTools());\n}","/home/chasepants/Desktop/siteform/src/redux/reducers/index.js",[],"/home/chasepants/Desktop/siteform/src/redux/reducers/bucket.js",[],"/home/chasepants/Desktop/siteform/src/components/domainSelection/DomainSelectorPage.jsx",["108","109","110","111"],"// SERVICES\nimport {useState, useEffect} from 'react';\nimport checkDomainNameAvailability from '../../services/api/domains';\n\n//COMPONENTS\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, ProgressBar } from 'react-bootstrap';\nimport DomainNameToast from './DomainToast';\nimport SubHeader from '../common/SubHeader';\nimport DomainInput from './DomainInput';\n\n//CONSTANTS\nconst { REACT_APP_MY_ENV } = process.env;\n\nfunction DomainSelectorPage() {\n  //redux \n  const dispatch = useDispatch();\n\n  //component specific state\n  const [domainName, setDomainName] = useState('');\n  const [domainAvailability, setDomainAvailability] = useState('');\n  const [search, setSearch] = useState('');\n  const bucketName = useSelector(state => state.bucketName);\n\n  //dispatch to redux state\n  dispatch({ type: \"ADD_HEADER\", header: \"Create Your Website\" })\n  dispatch({ type: \"ADD_SUB_HEADER\", header: \"First, search for an available domain name.\" })\n\n  //life-cycle hook\n  useEffect(async () => {\n    if (search) {\n      const result = await checkDomainNameAvailability(search);\n\n      if (result.data['Availability'] === 'AVAILABLE') {\n        dispatch({\n            type: \"ADD_BUCKET\",\n            bucketName: REACT_APP_MY_ENV === 'development' ? 'rapid-site-test-bucket' : search\n        }); \n      } \n\n      setDomainAvailability(result.data['Availability']);\n    }\n\n  }, [search])\n  \n  return (\n    <>\n      <ProgressBar now={33}/>\n\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\n        <SubHeader/>\n\n        <DomainInput \n          domainName={domainName}\n          setDomainAvailability={setDomainAvailability} \n          setDomainName={setDomainName} \n        />\n        \n        <Button className=\"mt-4\" onClick={event => setSearch(domainName)}>check availability</Button>\n\n        <DomainNameToast domain={domainName} availability={domainAvailability} />\n      </div>\n    </>\n  );\n}\n\nexport default DomainSelectorPage;\n","/home/chasepants/Desktop/siteform/src/components/siteForm/SiteFormPage.jsx",[],"/home/chasepants/Desktop/siteform/src/components/templateSelection/TemplateSelector.jsx",["112","113"],"import {useEffect} from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Card, ProgressBar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport SubHeader from '../common/SubHeader';\n\nfunction TemplateSelector() {\n  const { REACT_APP_MY_ENV } = process.env;\n  const bucketName   = useSelector(state => state.bucket);\n  const dispatch     = useDispatch();\n\n  dispatch({\n    type: \"ADD_SUB_HEADER\",\n    header: \"Next select the template that best suites your business\"\n  })\n\n  const setTemplate = template => {\n    dispatch({\n      type: \"ADD_TEMPLATE\",\n      templateName: template\n    });\n  }\n\n  useEffect(async ()=>{\n    if (REACT_APP_MY_ENV !== 'development') {\n      console.log('creating bucket....')\n      const createBucketResult = await axios.get(\n        'https://prt08pyot2.execute-api.us-west-1.amazonaws.com/prod/createBucket?bucketName='+bucketName\n      );\n    } else {\n      console.log('skipping bucket creation')\n    }\n  })\n\n  return (\n    <>\n      <ProgressBar now={66}/>\n      <div className=\"container text-center\">\n          <SubHeader/>\n            <div className=\"row\">\n              <div className=\"col-sm-4 offset-sm-2\">\n              <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                  <Card.Title>Restaurant Website</Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                  </Card.Text>\n                    <Link onClick={()=>{\n                      setTemplate(1)\n                    }} to='/site-form'>\n                      <Button variant=\"primary\">\n                        Select\n                      </Button>\n                    </Link>\n                    <Button className=\"ml-5\" variant=\"success\">\n                      Preview\n                    </Button> \n                </Card.Body>\n              </Card>\n              </div>\n              <div className=\"col-sm-4\">\n                <Card style={{ width: '18rem' }}>\n                  <Card.Body>\n                    <Card.Title>About Me Site</Card.Title>\n                    <Card.Text>\n                      Some quick example text to build on the card title and make up the bulk of\n                      .\n                    </Card.Text>\n                      <Link onClick={()=>{\n                        setTemplate(2)\n                      }} to='/site-form'>\n                        <Button variant=\"primary\">\n                            Select\n                        </Button>\n                        <Button className=\"ml-5\" variant=\"success\">\n                          Preview\n                        </Button> \n                      </Link> \n                  </Card.Body>\n                </Card>\n              </div>\n            </div>\n      </div>\n    </>\n  );\n}\n\nexport default TemplateSelector;\n","/home/chasepants/Desktop/siteform/src/components/siteForm/RestaurantForm.jsx",["114","115"],"/home/chasepants/Desktop/siteform/src/components/siteForm/AboutMeForm.jsx",["116"],"import {useState, useEffect} from 'react';\n\nfunction AboutMeForm({bucketName, setPostData, status, templateName}) {\n    const [businessName, setBusinessName]               = useState('');\n    const [businessDescription, setBusinessDescription] = useState('');\n    const [hours, setHours]                             = useState('');\n    const [location, setLocation]                       = useState('');\n    const [slogan, setSlogan]                           = useState('');\n\n    return (\n        <div className=\"d-flex flex-column justify-content-center align-items-center p-5\">\n            <h1>Siteform</h1>\n            <p>Tell us about you</p>\n            <label htmlFor=\"fname\">Name:</label><br/>\n            <input onChange={event => setBusinessName(event.target.value)} value={businessName} type=\"text\" id=\"fname\" name=\"fname\"/><br/>\n            <label htmlFor=\"fname\">Description:</label><br/>\n            <input onChange={event => setBusinessDescription(event.target.value)} value={businessDescription} type=\"text\" id=\"fname\" name=\"fname\"/><br/>\n            <label htmlFor=\"fname\">Hours:</label><br/>\n            <input onChange={event => setHours(event.target.value)} value={hours} type=\"text\" id=\"fname\" name=\"fname\"/><br/>\n            <label htmlFor=\"fname\">Location:</label><br/>\n            <input onChange={event => setLocation(event.target.value)} value={location} type=\"text\" id=\"fname\" name=\"fname\"/><br/>\n            <label htmlFor=\"fname\">Slogan:</label><br/>\n            <input onChange={event => setSlogan(event.target.value)} value={slogan} type=\"text\" id=\"fname\" name=\"fname\"/><br/>\n            <label htmlFor=\"fname\">Pages:</label><br/>\n\n            <input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/>\n            <label for=\"vehicle1\"> I have a bike</label><br/>\n            <input type=\"checkbox\" id=\"vehicle2\" name=\"vehicle2\" value=\"Car\"/>\n            <label for=\"vehicle2\"> I have a car</label><br/>\n            <input type=\"checkbox\" id=\"vehicle3\" name=\"vehicle3\" value=\"Boat\"/>\n            \n            <label for=\"vehicle3\"> I have a boat</label><br/>\n            <button onClick={() => setPostData({\n                \"businessName\":        businessName,\n                \"businessDescription\": businessDescription,\n                \"slogan\":              slogan,\n                \"hours\":               hours,\n                \"location\":            location,\n                \"bucketName\":          bucketName,\n                \"templateName\":        templateName\n            })}>Build Website</button>\n\n            <br/>\n            {\n                status === 200 &&\n                <h4>You can visit your site <a href={`http://${bucketName}.s3-website-us-west-1.amazonaws.com`}>HERE</a></h4>\n            }\n        </div>\n    )\n}\n\nexport default AboutMeForm;\n\n\n","/home/chasepants/Desktop/siteform/src/components/siteForm/restaurant-forms/AboutUsForm.jsx",[],"/home/chasepants/Desktop/siteform/src/components/siteForm/restaurant-forms/ContactPageForm.jsx",[],"/home/chasepants/Desktop/siteform/src/redux/reducers/template.js",[],"/home/chasepants/Desktop/siteform/src/redux/reducers/header.js",[],"/home/chasepants/Desktop/siteform/src/components/common/Header.jsx",[],"/home/chasepants/Desktop/siteform/src/redux/reducers/subHeader.js",[],"/home/chasepants/Desktop/siteform/src/components/common/SubHeader.jsx",[],"/home/chasepants/Desktop/siteform/src/components/domainSelection/DomainInput.jsx",["117"],"import React from 'react';\nimport {useSelector} from 'react-redux';\n\nconst DomainInput = ({domainName, setDomainAvailability, setDomainName}) => {\n    \n    const header = useSelector(state => state.header);\n\n    return (\n        <input className=\"mt-3\" value={domainName} onChange={event => {\n            setDomainAvailability('')\n            setDomainName(event.target.value)\n        }}/>\n    )\n}\n\nexport default DomainInput;","/home/chasepants/Desktop/siteform/src/services/api/domains.js",[],"/home/chasepants/Desktop/siteform/src/components/domainSelection/DomainToast.jsx",[],"/home/chasepants/Desktop/siteform/src/components/siteForm/restaurant-forms/GeneralInfoForm.jsx",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":14,"column":10,"nodeType":"124","messageId":"125","endLine":14,"endColumn":19},{"ruleId":"122","severity":1,"message":"126","line":1,"column":23,"nodeType":"124","messageId":"125","endLine":1,"endColumn":38},{"ruleId":"122","severity":1,"message":"127","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":14},{"ruleId":"122","severity":1,"message":"128","line":24,"column":9,"nodeType":"124","messageId":"125","endLine":24,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":31,"column":13,"nodeType":"131","endLine":45,"endColumn":4},{"ruleId":"129","severity":1,"message":"132","line":45,"column":6,"nodeType":"133","endLine":45,"endColumn":14,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"130","line":25,"column":13,"nodeType":"131","endLine":34,"endColumn":4},{"ruleId":"122","severity":1,"message":"135","line":28,"column":13,"nodeType":"124","messageId":"125","endLine":28,"endColumn":31},{"ruleId":"122","severity":1,"message":"136","line":42,"column":25,"nodeType":"124","messageId":"125","endLine":42,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":113,"column":1,"nodeType":"139","messageId":"140","endLine":133,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":1,"column":19,"nodeType":"124","messageId":"125","endLine":1,"endColumn":28},{"ruleId":"122","severity":1,"message":"141","line":6,"column":11,"nodeType":"124","messageId":"125","endLine":6,"endColumn":17},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'applyMiddleware' is defined but never used.","'Link' is defined but never used.","'bucketName' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'createBucketResult' is assigned a value but never used.","'form' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'header' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [dispatch, search]",{"range":"147","text":"148"},[1425,1433],"[dispatch, search]"]